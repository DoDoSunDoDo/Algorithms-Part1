public class LC61_jiuzhang {
    public ListNode rotateRight(ListNode head, int k) {
        //use fast pointer and slow pointers
        //find the tail, the head, and the k-1

        //corner case
        if (head == null) return null;
        // calulate the length
        int length = 0;
        ListNode dummy = new ListNode(0);
        dummy.next = head;

        while(head!= null) {//not head.next
            length++;
            head = head.next;
        }

        k = k% length;
        //initialize head
        head = dummy;
        ListNode tail = dummy;
        //let first pionter go further
        for(int i = 0; i<n; i++){
            head = head.next;
        }

        while(head.next!=null){// this time must be head.next
            tail = tail.next; //now the tail goes to the one before k
            head = head.next; //head go to the tail
        }
        // now need to sisnth tail to the head, head to the k, k-1 to the null
        head.next = dummy.next;
        dummy.next =tail.next;
        tail.next = null;

        return dummy.next;
    }

}
