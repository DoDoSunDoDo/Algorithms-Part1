public class LC2 {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        // get dummy head and tail. tail is for add sum
        // carry is 进位 carry sum/10
        // the val is sum%10
        ListNode tail = new ListNode(0);
        ListNode dummy = tail;
        //four pointers, one for l1, one for l2, one for tail move with l1 and l2
        //the last is for dummy head
        int sum = 0;
        //when l1 and l2 are all null, or no carry, stop it
        while (l1!=null || l2!=null || sum>0){
            // use Trinocular for corner case when one finish calculation
            sum += (l1 == null ? 0:l1.val) + (l2 == null ? 0: l2.val);
            tail.next = new ListNode(sum%10);
            //move all pointers
            tail = tail.next;
            if(l1 != null) l1 = l1.next; //this time it is l1!-null
            //not l1.next != null
            //attention!!
            if(l2 != null) l2 = l2.next;
            sum = sum/10;
        }
        return dummy.next;
    }
}
