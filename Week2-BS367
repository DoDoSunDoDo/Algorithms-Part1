public class LC34 {
    public int[] searchRange(int[] nums, int target) {
        if (nums.length==0) return new int[] {-1,-1};
    int left = findLeft(nums, target);
    int right = findRight(nums, target);
    int[] res = {left, right};

    return res;
    }
    public int findLeft(int[] nums, int target){

        int l =0, r = nums.length-1;
        int resL = -1;
        while(l+1<r){
            int mid = l +(r-l)/2;
            if(nums[mid]==target) r=mid;
            else if (nums[mid]>target) r=mid;
            else l=mid;
        }
        if(nums[l]==target) return resL=l;
        if(nums[r]==target) return resL=r;
        return resL;
    }

    public int findRight(int[] nums, int target){
        int l =0, r = nums.length-1;
        int resR = -1;
        while(l+1<r){
            int mid = l +(r-l)/2;
            if(nums[mid]==target) l=mid+1;
            else if (nums[mid]>target) r=mid;
            else l=mid+1;
        }
        if(nums[r]==target) return resR=r;
        if(nums[l]==target) return resR=l;

        return resR;
    }
}
